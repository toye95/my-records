{"version":3,"sources":["features/record/RecordItem.module.css","features/home/Home.module.css","features/forms/Forms.module.css","features/cards/Card.module.css","features/cards/Card.tsx","features/record/RecordItem.tsx","core/default.service.ts","features/home/home.service.ts","features/home/homeSlice.ts","features/errors/Error.tsx","features/home/Home.tsx","core/session.ts","features/forms/login/loginSlice.ts","features/forms/login/login.service.ts","features/forms/login/Login.tsx","features/forms/passwordreset/passwordResetSlice.ts","features/forms/passwordreset/resetPassword.service.ts","features/forms/passwordreset/ResetPassword.tsx","features/forms/signup/signupSlice.ts","features/forms/signup/signup.service.ts","features/forms/signup/Signup.tsx","Routes.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","Card","props","className","styles","card","children","RecordItem","id","title","createdAt","createdBy","handleEdit","handleDelete","container","grid","info","bold","button","edit","onClick","delete","postRequest","url","data","fetch","method","headers","body","JSON","stringify","createRecord","userId","query","Promise","resolve","reject","process","then","res","json","response","errors","errorMsg","message","status","e","getRecords","editRecord","recordId","deleteRecord","homeSlice","createSlice","name","initialState","isLoading","error","reducers","pending","state","success","failure","payload","setRecords","actions","home","background","color","borderRadius","width","padding","fontSize","Error","style","Home","dispatch","useDispatch","history","useHistory","useSelector","sessionStorage","getItem","React","useState","formData","setFormData","isEdit","setEdit","setRecordId","getAllRecords","a","onSubmit","preventDefault","editTitle","deleteItem","useEffect","push","clear","link","autoFocus","type","input","value","placeholder","onChange","target","marginTop","records","length","map","item","fullname","toString","text","loginSlice","isAuth","userDetails","loginPending","loginSuccess","loginFailure","login","userLogin","email","password","console","log","loginUser","token","setItem","emailRegex","RegExp","Login","test","disabled","to","passwordResetSlice","passwordResetPending","passwordResetSuccess","passwordResetFailure","passwordReset","resetPassword","ResetPassword","confirmPassword","signupSlice","signupPending","signupSuccess","signupFailure","signup","userSignup","Signup","Route","require","Routes","path","exact","strict","component","Component","App","configureStore","reducer","loginReducer","signUpReducer","passwordResetReducer","homeReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc51bb66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RecordItem_container__2T8d_\",\"title\":\"RecordItem_title__2wAnS\",\"info\":\"RecordItem_info__g7WMI\",\"grid\":\"RecordItem_grid__2zQFU\",\"button\":\"RecordItem_button__mLf8n\",\"edit\":\"RecordItem_edit__2MNTw\",\"delete\":\"RecordItem_delete__3Fzka\",\"bold\":\"RecordItem_bold__2zonE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__1ZnZw\",\"input\":\"Home_input__2JdJz\",\"button\":\"Home_button__3a9tN\",\"grid\":\"Home_grid__1FnsT\",\"text\":\"Home_text__2hb4Y\",\"link\":\"Home_link__buX6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Forms_container__3Lcl_\",\"input\":\"Forms_input__1EKme\",\"button\":\"Forms_button__39Lcn\",\"text\":\"Forms_text__1BOj3\",\"link\":\"Forms_link__38Qp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1JuVl\"};","import React from 'react';\nimport styles from './Card.module.css'\nfunction Card(props: any) {\n\n  return (\n    <div className={styles.card}>\n        {props.children}\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport styles from './RecordItem.module.css'\n\ntype RecordType = {\n    id?: string,\n    title: string,\n    createdAt: string,\n    createdBy: string,\n    handleEdit: any,\n    handleDelete: any\n}\n\nfunction RecordItem({id, title, createdAt, createdBy, handleEdit, handleDelete}: RecordType) {\n\n  return (\n      <div className={styles.container}>\n          <div className={styles.grid}>\n            <div>\n                <div>\n                    <div className={styles.title}>{title}</div>\n                </div>\n                <div>\n                    <div className={styles.info}>Created by \n                    <span className={styles.bold}> {createdBy} </span> \n                     at <span className={styles.bold}>{createdAt}</span></div>\n                </div>\n            </div>\n            <div>\n                <button className={styles.button + ' ' + styles.edit} onClick={() => handleEdit(id, title)}>Edit</button>\n                <button className={styles.button + ' ' + styles.delete} onClick={() => handleDelete(id)}>Delete</button>\n            </div>\n          </div>\n      </div>\n  );\n}\n\nexport default RecordItem;\n","\n\n\nexport const postRequest = (url: any, data: object) => {\n    const headers = {\n        \"content-type\": \"application/json\",\n        // Authorization: `Bearer ${sessionStorage.getItem(\"token\")}`\n    }\n    return fetch(url, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify(data)\n    });\n};","import { postRequest } from \"../../core/default.service\"\n\ntype RecordItem = {userId: number, title: string}\n\nexport const createRecord = ( {userId, title }: RecordItem) => {\n    const body: any = {\n        query: `\n            mutation {\n                    createRecord(userId: ${userId}, title: \"${title}\"){\n                        id,\n                        title,\n                        createdAt\n                }\n            }\n        `\n    }\n    return new Promise((resolve, reject) => {\n        postRequest(process.env.REACT_APP_API_URL, body)\n        .then(res => res.json())\n        .then(response => {\n            if (!response.errors){\n                resolve({status: 'success'})\n            } else {\n                const errorMsg = response.errors[0].message\n                reject({status: 'error', message: errorMsg})\n            }\n        }, (e) => reject(e))\n    })\n}\n\nexport const getRecords = ( userId : number) => {\n    const body: any = {\n        query: `\n             {\n                    getRecords(id: ${userId}){\n                        id,\n                        fullname,\n                        records {\n                            id,\n                            title,\n                            createdAt\n                        }\n                }\n            }\n        `\n    }\n    return new Promise((resolve, reject) => {\n        postRequest(process.env.REACT_APP_API_URL, body)\n        .then(res => res.json())\n        .then(response => {\n            if (!response.errors){\n                resolve({status: 'success', data: response.data.getRecords})\n            } else {\n                const errorMsg = response.errors[0].message\n                reject({status: 'error', message: errorMsg})\n            }\n        }, (e) => reject(e))\n    })\n}\n\nexport const editRecord = ( recordId: any, title: string) => {\n    const body: any = {\n        query: `\n            mutation {\n                    editRecord(recordId: ${recordId}, title: \"${title}\"){\n                        id,\n                }\n            }\n        `\n    }\n    return new Promise((resolve, reject) => {\n        postRequest(process.env.REACT_APP_API_URL, body)\n        .then(res => res.json())\n        .then(response => {\n            if (!response.errors){\n                resolve({status: 'success'})\n            } else {\n                const errorMsg = response.errors[0].message\n                reject({status: 'error', message: errorMsg})\n            }\n        }, (e) => reject(e))\n    })\n}\n\nexport const deleteRecord = ( recordId: any ) => {\n    const body: any = {\n        query: `\n            mutation {\n                    deleteRecord(recordId: ${+recordId}){\n                        id,\n                }\n            }\n        `\n    }\n    return new Promise((resolve, reject) => {\n        postRequest(process.env.REACT_APP_API_URL, body)\n        .then(res => res.json())\n        .then(response => {\n            if (!response.errors){\n                resolve({status: 'success'})\n            } else {\n                const errorMsg = response.errors[0].message\n                reject({status: 'error', message: errorMsg})\n            }\n        }, (e) => reject(e))\n    })\n}","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  isLoading: false,\n  error: '',\n  data: []\n}\n\nexport const homeSlice = createSlice({\n  name: 'home',\n  initialState,\n  reducers: {\n    pending: (state) => {\n      state.isLoading = true\n    },\n    success: (state) => {\n      state.isLoading = false\n      state.error = ''\n    },\n    failure: (state, { payload }) => {\n      state.isLoading = false\n      state.error = payload\n    },\n    setRecords: ( state, { payload } ) => {\n        state.data = payload\n    }\n  }\n});\n\nexport const { home, setRecords, pending, success, failure }: any = homeSlice.actions;\n\nexport default homeSlice.reducer;\n","import React from 'react';\nfunction Error(props: any) {\n\n  return (\n    <div style={styles.error}>\n        {props.message}\n    </div>\n  );\n}\n\nconst styles = {\n  error: {\n    background: 'pink', \n    color: 'red', \n    borderRadius: 8, \n    width: '90%', \n    padding: 15, \n    fontSize: 14\n  }\n}\n\nexport default Error;\n","import React, { useEffect } from 'react';\nimport Card from '../cards/Card';\nimport RecordItem from '../record/RecordItem';\nimport styles from './Home.module.css'\nimport { createRecord, getRecords, editRecord, deleteRecord } from './home.service';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setRecords, failure } from './homeSlice';\nimport Error from '../errors/Error';\nimport { sessionActive } from '../../core/session';\nimport { useHistory } from 'react-router-dom';\n\n\ntype Record = {id: string, title:string, createdAt: string}\n\nfunction Home() {\nconst dispatch = useDispatch()\nconst history = useHistory()\nconst { isLoading, error, data } = useSelector(((state: any) => state.home))\nconst id: string | any = sessionStorage.getItem('id')\nconst [formData, setFormData] = React.useState({\n    title: ''\n})\nconst [isEdit, setEdit] = React.useState(false)\nconst [recordId, setRecordId] = React.useState(null)\n\nconst onChange = (e: any) => {\n    setFormData({...formData, [e.target.name]: e.target.value})\n}\n\nconst getAllRecords = async () => {\n    const response: any = await getRecords(+id)\n    if (response.status === \"success\"){\n        dispatch(setRecords(response.data))\n    } else {\n        dispatch(failure(response.message))\n    }\n}\n\nconst onSubmit = async (e: any) => {\n    e.preventDefault()\n    const { title } = formData\n    const userId = +id\n    if (title){\n        try {\n            const response: any = isEdit ? \n                    await editRecord( recordId, formData.title) : \n                        await createRecord({userId, title})\n            if (response.status === \"success\"){\n                setEdit(false)\n                setFormData({...formData, title: ''})\n                getAllRecords()\n            } \n        } catch (e) {\n            dispatch(failure(e.message))\n        }\n    }\n}\n\nconst editTitle = (id: any, title: string) => {\n    setFormData({...formData, title})\n    setEdit(true)\n    setRecordId(id)\n}\n\nconst logout = () => {\n    sessionStorage.clear()\n    history.push('/')\n}\n\nconst deleteItem = async (id: string) => {\n    try {\n        const response: any = await deleteRecord(id)\n        if (response.status === \"success\"){\n            getAllRecords()\n        }\n    } catch (e) {\n        dispatch(failure(e.message))\n    }\n}\n\nuseEffect(() => {\n    if (!sessionActive()) history.push('/')\n    getAllRecords()\n}, [])\n\n  return (\n    <div className={styles.container}>\n        <Card>\n            <h2>My Records</h2><a onClick={logout} className={styles.link}>Logout</a>\n            {error && <Error message={'Error: ' + error}/>}\n            <form onSubmit={onSubmit}>\n                <div className={styles.grid}>\n                    <div>\n                        <input \n                            autoFocus\n                            type=\"text\" \n                            name=\"title\" \n                            className={styles.input}\n                            value={formData.title} \n                            placeholder=\"Write something...\" \n                            onChange={onChange}\n                        />\n                    </div>\n                    <div>\n                        <button\n                            type=\"submit\"\n                            className={styles.button}>\n                            {!isLoading ? 'Save' : 'Saving...'}\n                        </button>\n                    </div>\n                </div>\n            </form>\n            \n            <div style={{marginTop: 20}}>\n                {data && data?.records?.length ? data?.records.map((item: Record) => (\n                    <RecordItem \n                        id={item.id}\n                        title={item.title} \n                        createdBy={data.fullname}\n                        createdAt={item.createdAt} \n                        handleEdit={editTitle}\n                        handleDelete={deleteItem}\n                        key={item.id.toString()}/>\n                )): \n                <div className={styles.text}>\n                    No records\n                </div>\n                }\n            </div>\n        </Card>\n    </div>\n  );\n}\n\nexport default Home;\n","export const sessionActive = () => {\n    const token = sessionStorage.getItem('token')\n    if (token) return true\n\n    return false\n}","import { createSlice } from '@reduxjs/toolkit';\n\ntype InitialState = {\n  isLoading: boolean,\n  isAuth: boolean,\n  error: string,\n  userDetails: any | null\n}\nconst initialState: InitialState = {\n  isLoading: false,\n  isAuth: false,\n  error: '',\n  userDetails: null\n}\n\nexport const loginSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginPending: (state) => {\n      state.isLoading = true\n    },\n    loginSuccess: (state, { payload }) => {\n      state.isLoading = false\n      state.isAuth = true\n      state.error = ''\n      state.userDetails = payload\n    },\n    loginFailure: (state, { payload }) => {\n      state.isLoading = false\n      state.error = payload\n    }\n  }\n});\n\nexport const { login, loginPending, loginSuccess, loginFailure }: any = loginSlice.actions;\n\nexport default loginSlice.reducer;\n","import { postRequest } from \"../../../core/default.service\"\n\ntype Login = {email: string, password: string}\n\nexport const userLogin = ( {email, password }: Login) => {\n    const body: any = {\n        query: `\n            mutation {\n                    loginUser(email: \"${email}\", password: \"${password}\"){\n                        id,\n                        fullname,\n                        email,\n                        token\n                }\n            }\n        `\n    }\n    return new Promise((resolve, reject) => {\n        postRequest(process.env.REACT_APP_API_URL, body)\n        .then(res => res.json())\n        .then(response => {\n            if (!response.errors){\n                console.log('resp', response)\n                const  { id, fullname, email, token } = response.data.loginUser\n                sessionStorage.setItem('token', token)\n                sessionStorage.setItem('id', id)\n                resolve({status: 'success', id, fullname, email})\n            } else {\n                const errorMsg = response.errors[0].message\n                reject({status: 'error', message: errorMsg})\n            }\n        }, (e) => reject(e))\n    })\n}","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Card from '../../cards/Card';\nimport styles from '../Forms.module.css'\nimport { loginPending, loginSuccess, loginFailure } from './loginSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { userLogin } from './login.service';\nimport Error from '../../errors/Error';\n\nconst emailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i)\n\nfunction Login() {\nconst dispatch = useDispatch()\nconst history = useHistory()\nconst { isLoading, error } = useSelector(((state: any) => state.login))\nconst [formData, setFormData] = React.useState({\n    email: '',\n    password: ''\n})\n\nconst onChange = (e: any) => {\n    setFormData({...formData, [e.target.name]: e.target.value})\n}\n\nconst onSubmit = async (e: any) => {\n    e.preventDefault()\n    const { email, password } = formData\n    if (!emailRegex.test(email) || !password) {\n        dispatch(loginFailure('Form validation failed'))\n        return\n    };\n    dispatch(loginPending())\n    try {\n        const isAuth: any = await userLogin(formData)\n        if (isAuth.status === \"error\"){\n            dispatch(loginFailure(isAuth.message))\n        }\n        dispatch(loginSuccess(isAuth))\n        history.push('/home')\n    } catch (e) {\n        dispatch(loginFailure(e.message))\n    }\n}\n\n  return (\n    <div className={styles.container}>\n        <Card>\n            <h2>Login</h2>\n            {error && <Error message={'Error: ' + error}/>}\n            <form onSubmit={onSubmit}>\n                <div>\n                    <input \n                        type=\"text\" \n                        name=\"email\" \n                        className={styles.input}\n                        value={formData.email} \n                        placeholder=\"Email\" \n                        onChange={onChange}\n                    />\n                </div>\n                <div>\n                    <input \n                        type=\"password\" \n                        name=\"password\" \n                        className={styles.input}\n                        value={formData.password} \n                        placeholder=\"Password\" \n                        onChange={onChange}\n                    />\n                </div>\n                <div>\n                    <button\n                        type=\"submit\"\n                        className={styles.button} \n                        disabled={isLoading ? true : false}>\n                        {!isLoading ? 'Log In' : 'Logging in...'}\n                    </button>\n                </div>\n            </form>\n            <div>\n                <p className={styles.text}>\n                    Don't have an account yet ? <Link to=\"/signup\" className={styles.link}>Sign Up</Link>\n                </p>\n            </div>\n            <div>\n                <p className={styles.text}>\n                    Forgotten your password ? <Link to=\"/reset-password\" className={styles.link}>Reset</Link>\n                </p>\n            </div>\n        </Card>\n    </div>\n  );\n}\n\nexport default Login;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  isLoading: false,\n  error: ''\n}\n\nexport const passwordResetSlice = createSlice({\n  name: 'passwordReset',\n  initialState,\n  reducers: {\n    passwordResetPending: (state) => {\n      state.isLoading = true\n    },\n    passwordResetSuccess: (state) => {\n      state.isLoading = false\n      state.error = ''\n    },\n    passwordResetFailure: (state, { payload }) => {\n      state.isLoading = false\n      state.error = payload\n    }\n  }\n});\n\nexport const { passwordReset, passwordResetPending, passwordResetSuccess, passwordResetFailure }: any = passwordResetSlice.actions;\n\nexport default passwordResetSlice.reducer;\n","import { postRequest } from \"../../../core/default.service\"\n\ntype PasswordReset  = {email: string, password: string}\n\nexport const resetPassword = ( {email, password }: PasswordReset) => {\n    const body: any = {\n        query: `\n            mutation {\n                    resetPassword(email: \"${email}\", password: \"${password}\"){\n                        id,\n                }\n            }\n        `\n    }\n    return new Promise((resolve, reject) => {\n        postRequest(process.env.REACT_APP_API_URL, body)\n        .then(res => res.json())\n        .then(response => {\n            if (!response.errors){\n                resolve({status: 'success'})\n            } else {\n                const errorMsg = response.errors[0].message\n                reject({status: 'error', message: errorMsg})\n            }\n        }, (e) => reject(e))\n    })\n}","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Card from '../../cards/Card';\nimport styles from '../Forms.module.css'\nimport { passwordResetPending, passwordResetSuccess, passwordResetFailure } from './passwordResetSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { resetPassword } from './resetPassword.service';\nimport Error from '../../errors/Error';\n\nconst emailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i)\n\nfunction ResetPassword() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLoading, error } = useSelector(((state: any) => state.passwordReset))\n    const [formData, setFormData] = React.useState({\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n\nconst onChange = (e: any) => {\n    setFormData({...formData, [e.target.name]: e.target.value})\n}\n\nconst onSubmit = async (e: any) => {\n    e.preventDefault()\n    const { email, password, confirmPassword } = formData\n    if (!emailRegex.test(email) || !password || !confirmPassword) {\n        dispatch(passwordResetFailure('Form validation failed'))\n        return\n    } else {\n        if (password !== confirmPassword){\n            dispatch(passwordResetFailure('Passwords do not match'))\n            return\n        }\n    }\n    dispatch(passwordResetPending())\n    try {\n        const response: any = await resetPassword(formData)\n        if (response.status === \"error\"){\n            dispatch(passwordResetFailure(response.message))\n        }\n        dispatch(passwordResetSuccess())\n        history.push('/')\n    } catch (e) {\n        dispatch(passwordResetFailure(e.message))\n    }\n}\n  return (\n    <div className={styles.container}>\n        <Card>\n            <h2>Reset Password</h2>\n            {error && <Error message={'Error: ' + error}/>}\n            <form onSubmit={onSubmit}>\n                <div>\n                    <input \n                        type=\"text\" \n                        name=\"email\"\n                        className={styles.input}\n                        value={formData.email} \n                        placeholder=\"Email\" \n                        onChange={onChange}\n                    />\n                </div>  \n                <div>\n                    <input \n                        type=\"password\" \n                        name=\"password\"\n                        className={styles.input}\n                        value={formData.password} \n                        placeholder=\"New Password\" \n                        onChange={onChange}\n                    />\n                </div>            \n                <div>\n                    <input \n                        type=\"password\" \n                        name=\"confirmPassword\" \n                        className={styles.input}\n                        value={formData.confirmPassword} \n                        placeholder=\"Confirm New Password\" \n                        onChange={onChange}\n                    />\n                </div>\n                <div>\n                    <button\n                        type=\"submit\"\n                        className={styles.button} \n                        disabled={isLoading ? true : false}>\n                        {!isLoading ? 'Save' : 'Saving...'}\n                    </button>\n                </div>\n            </form>\n            <div>\n                <p className={styles.text}>\n                    Back to <Link to=\"/\" className={styles.link}>Login</Link>\n                </p>\n            </div>\n        </Card>\n    </div>\n  );\n}\n\nexport default ResetPassword;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  isLoading: false,\n  error: ''\n}\n\nexport const signupSlice = createSlice({\n  name: 'signup',\n  initialState,\n  reducers: {\n    signupPending: (state) => {\n      state.isLoading = true\n    },\n    signupSuccess: (state) => {\n      state.isLoading = false\n      state.error = ''\n    },\n    signupFailure: (state, { payload }) => {\n      state.isLoading = false\n      state.error = payload\n    }\n  }\n});\n\nexport const { signup, signupPending, signupSuccess, signupFailure }: any = signupSlice.actions;\n\nexport default signupSlice.reducer;\n","import { postRequest } from \"../../../core/default.service\"\n\ntype Signup = {fullname: string, email: string, password: string}\n\nexport const userSignup = ( {fullname, email, password }: Signup) => {\n    const body: any = {\n        query: `\n            mutation {\n                    createUser(fullname: \"${fullname}\", email: \"${email}\", password: \"${password}\"){\n                        id,\n                        fullname,\n                        email\n                }\n            }\n        `\n    }\n    return new Promise((resolve, reject) => {\n        postRequest(process.env.REACT_APP_API_URL, body)\n        .then(res => res.json())\n        .then(response => {\n            if (!response.errors){\n                resolve({status: 'success'})\n            } else {\n                const errorMsg = response.errors[0].message\n                reject({status: 'error', message: errorMsg})\n            }\n        }, (e) => reject(e))\n    })\n}","import React from 'react';\nimport { Link , useHistory} from 'react-router-dom';\nimport Card from '../../cards/Card';\nimport styles from '../Forms.module.css'\nimport { signupPending, signupSuccess, signupFailure } from './signupSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { userSignup } from './signup.service';\nimport Error from '../../errors/Error';\n\nconst emailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i)\n\nfunction Signup() {\nconst dispatch = useDispatch()\nconst history = useHistory()\nconst { isLoading, error } = useSelector(((state: any) => state.signup))\nconst [formData, setFormData] = React.useState({\n    fullname: '',\n    email: '',\n    password: ''\n})\n\nconst onChange = (e: any) => {\n    setFormData({...formData, [e.target.name]: e.target.value})\n}\n\nconst onSubmit = async (e: any) => {\n    e.preventDefault()\n    const { fullname, email, password } = formData\n    if (!fullname || !emailRegex.test(email) || !password) {\n        dispatch(signupFailure('Form validation failed'))\n        return\n    }\n    dispatch(signupPending())\n    try {\n        const response: any = await userSignup(formData)\n        if (response.status === \"error\"){\n            dispatch(signupFailure(response.message))\n        }\n        dispatch(signupSuccess())\n        history.push('/')\n    } catch (e) {\n        dispatch(signupFailure(e.message))\n    }\n}\n  return (\n    <div className={styles.container}>\n        <Card>\n            <h2>Signup</h2>\n            {error && <Error message={'Error: ' + error}/>}\n            <form onSubmit={onSubmit}>\n                <div>\n                    <input \n                        type=\"text\" \n                        name=\"fullname\" \n                        className={styles.input}\n                        value={formData.fullname} \n                        placeholder=\"Fullname\" \n                        onChange={onChange}\n                    />\n                </div>\n                <div>\n                    <input \n                        type=\"text\" \n                        name=\"email\" \n                        className={styles.input}\n                        value={formData.email} \n                        placeholder=\"Email\" \n                        onChange={onChange}\n                    />\n                </div>\n                <div>\n                    <input \n                        type=\"password\" \n                        name=\"password\" \n                        className={styles.input}\n                        value={formData.password} \n                        placeholder=\"Password\" \n                        onChange={onChange}\n                    />\n                </div>\n                <div>\n                    <button \n                        type=\"submit\" \n                        className={styles.button} \n                        disabled={isLoading ? true : false}>\n                        {!isLoading ? 'Sign Up' : 'Signing up...'}\n                    </button>\n                </div>\n            </form>\n            <div>\n                <p className={styles.text}>\n                    Have an account ? <Link to=\"/\" className={styles.link}>Login</Link>\n                </p>\n            </div>\n        </Card>\n    </div>\n  );\n}\n\nexport default Signup;\n","import { Component } from \"react\";\nimport Home from \"./features/home/Home\";\nimport Login from \"./features/forms/login/Login\";\nimport ResetPassword from \"./features/forms/passwordreset/ResetPassword\";\nimport Signup from \"./features/forms/signup/Signup\";\nconst Route = require('react-router-dom').Route\n\nclass Routes extends Component {\n\n  render() {\n    return (\n      <>\n        <Route path=\"/\" exact strict component={Login} />\n        <Route path=\"/signup\" exact strict component={Signup} />\n        <Route path=\"/reset-password\" exact strict component={ResetPassword} />\n        <Route path=\"/home\" exact strict component={Home} />\n      </>\n    );\n  }\n}\nexport default Routes;","import React from 'react';\r\nimport {BrowserRouter as Router, useHistory} from 'react-router-dom';\r\nimport Routes from './Routes';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <Router>\r\n          <Routes />  \r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport loginReducer from '../features/forms/login/loginSlice';\r\nimport signUpReducer from '../features/forms/signup/signupSlice'\r\nimport passwordResetReducer from '../features/forms/passwordreset/passwordResetSlice'\r\nimport homeReducer from '../features/home/homeSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    login: loginReducer,\r\n    signup: signUpReducer,\r\n    passwordReset: passwordResetReducer,\r\n    home: homeReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config: any) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: any, config: any) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: any, config: any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}